pool:
  vmImage: 'windows-latest'

variables:
- name: solution
  value: '**/*.sln'
- name: BuildPlatform
  value: 'x64'
- name: buildConfiguration
  value: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: 6.x
    performMultiLevelLookup: true
    includePreviewVersions: true # Required for preview versions

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '$(solution)'

#- task: VSBuild@1
#  displayName: 'Restoring ...'
#  inputs:
#    solution: '$(solution)'
#    platform: 'x64'
#    configuration: 'Release'
#    logFileVerbosity: diagnostic
#    msbuildArgs: >
#        /bl:$(Build.ArtifactStagingDirectory)\restore.binlog
#        /t:Restore
#        /pp:$(Build.ArtifactStagingDirectory)\restore-pp.log

#- task: VSBuild@1
#  displayName: 'Restoring for win-x64...'
#  inputs:
#    solution: '$(solution)'
#    platform: 'x64'
#    configuration: 'Release'
#    logFileVerbosity: diagnostic
#    msbuildArgs: >
#        /bl:$(Build.ArtifactStagingDirectory)\restore-win-x64.binlog
#        /p:RuntimeIdentifier=win-x64
#        /t:Restore
#        /pp:$(Build.ArtifactStagingDirectory)\restore-pp-win-x64.log

- task: VSBuild@1
  displayName: 'Building app...'
  inputs:
    solution: '$(solution)'
    platform: 'x64'
    configuration: 'Release'
    logFileVerbosity: diagnostic
    msbuildArgs: >
        /bl:$(Build.ArtifactStagingDirectory)\output.binlog;ProjectImports=ZipFile
        /p:Platform=x64

- task: PublishBuildArtifacts@1
  displayName: 'Publishing artifacts'
  condition: always()
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'